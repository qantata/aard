### This file was generated by Nexus Schema
### Do not make changes to this file directly


input ClientStreamProfileInput {
  audioCodecs: ProfileAudioCodecsInput!
  containers: ProfileContainersInput!
  videoCodecs: ProfileVideoCodecsInput!
}

type Library {
  id: ID!
  root: String!
}

type Movie {
  files: [VideoFile!]!
  id: ID!
  library: Library!
  title: String!
}

type Mutation {
  createLibrary(root: String!): Library
  createVideoStreamSession(entryId: String!, profile: ClientStreamProfileInput!): VideoStreamSession
  deleteLibrary(id: String!): Library
  deleteVideoStreamSession(id: String!): Boolean
  deleteVideoStreamSessions: Boolean
}

input ProfileAudioCodecsInput {
  aac: Boolean
  ac3: Boolean
  flac: Boolean
  mp3: Boolean
}

input ProfileContainersInput {
  mkv: Boolean
  mp4: Boolean
  ts: Boolean
  webm: Boolean
}

input ProfileH264Input {
  level: Int!
  profile: String!
}

input ProfileVideoCodecsInput {
  h264: ProfileH264Input
}

type Query {
  libraries: [Library]
  movies: [Movie]!
  videoStreamProfiles: [VideoStreamProfile]
  videoStreamSession(id: String!): VideoStreamSession
  videoStreamSessionClients: [VideoStreamSessionClient]
  videoStreamSessions: [VideoStreamSession]
}

type VideoFile {
  id: ID!
  path: String!
}

type VideoStreamProfile {
  audioBitrate: Int
  audioCodec: String
  client: VideoStreamSessionClient!
  container: String
  height: Int!
  id: ID!
  isHls: Boolean!
  videoBitrate: Int!
  videoCodec: String!
  width: Int!
}

type VideoStreamSession {
  clients: [VideoStreamSessionClient!]!
  file: VideoFile!
  id: ID!
}

type VideoStreamSessionClient {
  id: ID!
  isOwner: Boolean!
  profiles: [VideoStreamProfile!]!
  videoStreamSession: VideoStreamSession!
}
